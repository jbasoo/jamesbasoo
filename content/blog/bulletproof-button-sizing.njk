---
title: Bulletproof Buttons (and the Box Model)
description: Buttons are simple... right?
date: 2023-11-07
tags:
    - css
    - design systems
draft: true
---
<style>
    .hero {
        aspect-ratio: 2.5/1;
        max-height: 80dvh;
        padding: 2rem;
        background: silver;
        position: relative;
        overflow: hidden;
        box-shadow: inset 0 .1rem .5rem rgba(0, 0, 0, 0.1);
        border-radius: .25rem;

        &:before {
            content: "";
            display: block;
            position: absolute;
            inset: 0;
            z-index: 1;
            background: url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='6' numOctaves='20' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
            mix-blend-mode: overlay;
            filter: saturate(0) blur(.5px);
            opacity: .5;
        }

        & jab-demo {
            position: absolute;
            inset: -5rem;
        }
    }
</style>
<div class="breakout hero" style="">
{# Add grid bg #}
    <jab-demo>
        <template>
            <style>
                :host {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: center;
                    align-content: center;
                    gap: .5rem;
                }

                .button {
                    --height: 2.75em; /* 32px */
                    --line-height: 1.25; /* 20px */
                    --font-size: 1rem; /* 16px */
                    --border-width: 0em;
                    --padding-block: calc((var(--height) - ( (var(--font-size) * var(--line-height)) + (var(--border-width) * 2) ) ) / 2);
                    /* padding-block = (32px - ((16px * 1.25) + (1px * 2))) / 2 */
                    /* padding-block = (height - ((font-size * line-height) + (border-width * 2)) / 2) */
                    padding: var(--padding-block) calc(var(--padding-block) * 2.5);

                    display: inline-flex;
                    align-items: center;
                    justify-content: center;
                    gap: .5ch;
                    font-size: var(--font-size);
                    line-height: var(--line-height);
                    text-decoration: none;
                    border: 0;
                    background: gainsboro;
                    color: inherit;
                    cursor: pointer;
                    font-family: var(--font-family--sans);

                    &.rounded {
                        border-radius: .2em;
                    }

                    &.pill {
                        border-radius: 999vw;
                    }

                    &.outline {
                        --border-width: 0.125em; /* 2px */
                        border-width: var(--border-width);
                        border-style: solid;
                        border-color: gray;
                    }

                    &.uppercase {
                        text-transform: uppercase;
                        padding-block: calc(var(--padding-block) * 1.15) calc(var(--padding-block) * 0.85);
                    }
                }
            </style>

            <a href="#" class="button uppercase rounded outline">
                <span class="icon">üõ°Ô∏è</span>
                Bullet
            </a>
            <button class="button pill">proof</button>
            <input type="button" value="Buttons" class="button outline">
        </template>
    </jab-demo>
</div>

{% renderTemplate "md" %}
[tl;dr](#tldr)

Buttons are simple, until they're not. There are an infinite number of variables in buttons but the one thing that should be constant is accessibility. Unfortunately I've seen (and built) many buttons over the years that neglect to respect user font scaling, don't account for unpredictable languages or lack visual consistency. The good news is that creating a bulletproof button layout is a great way to learn the CSS Box Model.

```
Button Height = Line Height + Top Padding + Bottom Padding + Top Border + Bottom Border
```

- Never use a fixed height
- Never use absolute CSS length units e.g. `px`
-

## Considerations

### Borders
### Uppercase
{% endrenderTemplate %}
